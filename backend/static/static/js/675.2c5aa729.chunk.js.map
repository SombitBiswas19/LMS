{"version":3,"file":"static/js/675.2c5aa729.chunk.js","mappings":"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","sources":["components/Analytics.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  LineChart,\r\n  Line,\r\n  PieChart,\r\n  Pie,\r\n  Cell,\r\n  ResponsiveContainer\r\n} from 'recharts';\r\nimport {\r\n  TrendingUp,\r\n  Users,\r\n  Clock,\r\n  Trophy,\r\n  AlertTriangle,\r\n  BookOpen,\r\n  LogOut,\r\n  Download,\r\n  RefreshCw\r\n} from 'lucide-react';\r\nimport { analyticsAPI, courseAPI, handleApiError } from '../services/api';\r\nimport toast from 'react-hot-toast';\r\n\r\n// âœ… COLORS defined globally so it's available to all components\r\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\r\n\r\nconst Analytics = ({ user, onLogout }) => {\r\n  const [dashboardData, setDashboardData] = useState(null);\r\n  const [courseAnalytics, setCourseAnalytics] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [refreshing, setRefreshing] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    fetchAnalyticsData();\r\n  }, []);\r\n\r\n  const fetchAnalyticsData = async () => {\r\n    try {\r\n      if (user?.role === 'admin') {\r\n        const [adminData, courses] = await Promise.all([\r\n          analyticsAPI.getAdminDashboard(),\r\n          courseAPI.getCourses()\r\n        ]);\r\n        setDashboardData(adminData);\r\n\r\n        const courseAnalyticsPromises = courses.slice(0, 5).map(course =>\r\n          analyticsAPI.getCourseAnalytics(course.id).catch(() => null)\r\n        );\r\n        const analyticsResults = await Promise.all(courseAnalyticsPromises);\r\n        setCourseAnalytics(analyticsResults.filter(Boolean));\r\n      } else {\r\n        const studentData = await analyticsAPI.getStudentDashboard();\r\n        setDashboardData(studentData);\r\n      }\r\n    } catch (error) {\r\n      handleApiError(error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleRefresh = async () => {\r\n    setRefreshing(true);\r\n    await fetchAnalyticsData();\r\n    setRefreshing(false);\r\n    toast.success('Analytics refreshed!');\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center\">\r\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50\">\r\n      <header className=\"bg-white shadow-sm border-b\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n          <div className=\"flex justify-between items-center py-4\">\r\n            <div className=\"flex items-center\">\r\n              <TrendingUp className=\"h-8 w-8 text-blue-600 mr-3\" />\r\n              <h1 className=\"text-2xl font-bold text-gray-900\">Analytics</h1>\r\n            </div>\r\n            <div className=\"flex items-center space-x-4\">\r\n              <button\r\n                onClick={() => navigate('/dashboard')}\r\n                className=\"text-gray-600 hover:text-gray-900 transition-colors\"\r\n              >\r\n                Dashboard\r\n              </button>\r\n              <button\r\n                onClick={handleRefresh}\r\n                disabled={refreshing}\r\n                className=\"p-2 text-gray-500 hover:text-gray-700 transition-colors disabled:opacity-50\"\r\n              >\r\n                <RefreshCw className={`h-5 w-5 ${refreshing ? 'animate-spin' : ''}`} />\r\n              </button>\r\n              <span className=\"text-sm text-gray-700\">{user?.full_name}</span>\r\n              <button\r\n                onClick={onLogout}\r\n                className=\"p-2 text-gray-500 hover:text-gray-700 transition-colors\"\r\n              >\r\n                <LogOut className=\"h-5 w-5\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </header>\r\n\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n        {user?.role === 'admin' ? (\r\n          <AdminAnalytics\r\n            data={dashboardData}\r\n            courseAnalytics={courseAnalytics}\r\n            onRefresh={handleRefresh}\r\n          />\r\n        ) : (\r\n          <StudentAnalytics data={dashboardData} />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// --- Admin Analytics Component ---\r\nconst AdminAnalytics = ({ data, courseAnalytics }) => {\r\n  const coursePerformanceData = courseAnalytics.map(course => ({\r\n    name: course.course_title.substring(0, 20) + '...',\r\n    enrollments: course.total_enrollments,\r\n    completion: course.completion_rate,\r\n    avgScore: course.avg_quiz_score\r\n  }));\r\n\r\n  const dropoutRiskData = [\r\n    {\r\n      name: 'Low Risk',\r\n      value:\r\n        data?.student_performance?.filter(s => s.avg_quiz_score > 70).length || 0\r\n    },\r\n    {\r\n      name: 'Medium Risk',\r\n      value:\r\n        data?.student_performance?.filter(\r\n          s => s.avg_quiz_score >= 50 && s.avg_quiz_score <= 70\r\n        ).length || 0\r\n    },\r\n    {\r\n      name: 'High Risk',\r\n      value:\r\n        data?.student_performance?.filter(s => s.avg_quiz_score < 50).length || 0\r\n    }\r\n  ];\r\n\r\n  const engagementData =\r\n    data?.student_performance?.map(student => ({\r\n      name: student.student_name.split(' ')[0],\r\n      watchTime: student.total_watch_time,\r\n      score: student.avg_quiz_score\r\n    })) || [];\r\n\r\n  return (\r\n    <div className=\"space-y-8\">\r\n      {/* Summary Cards */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\r\n        <StatCard title=\"Total Students\" value={data?.total_students || 0} icon={Users} color=\"blue\" />\r\n        <StatCard title=\"Active Courses\" value={data?.total_courses || 0} icon={BookOpen} color=\"green\" />\r\n        <StatCard title=\"Total Enrollments\" value={data?.total_enrollments || 0} icon={TrendingUp} color=\"purple\" />\r\n        <StatCard title=\"At-Risk Students\" value={data?.dropout_alerts?.length || 0} icon={AlertTriangle} color=\"red\" />\r\n      </div>\r\n\r\n      {/* Charts */}\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\r\n        <div className=\"bg-white rounded-lg shadow-lg p-6\">\r\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-6\">Course Performance</h3>\r\n          <ResponsiveContainer width=\"100%\" height={300}>\r\n            <BarChart data={coursePerformanceData}>\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"name\" />\r\n              <YAxis />\r\n              <Tooltip />\r\n              <Legend />\r\n              <Bar dataKey=\"enrollments\" fill=\"#3b82f6\" />\r\n              <Bar dataKey=\"completion\" fill=\"#10b981\" />\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n\r\n        <div className=\"bg-white rounded-lg shadow-lg p-6\">\r\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-6\">Student Risk Distribution</h3>\r\n          <ResponsiveContainer width=\"100%\" height={300}>\r\n            <PieChart>\r\n              <Pie\r\n                data={dropoutRiskData}\r\n                cx=\"50%\"\r\n                cy=\"50%\"\r\n                labelLine={false}\r\n                label={({ name, value }) => `${name}: ${value}`}\r\n                outerRadius={80}\r\n                fill=\"#8884d8\"\r\n                dataKey=\"value\"\r\n              >\r\n                {dropoutRiskData.map((entry, index) => (\r\n                  <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\r\n                ))}\r\n              </Pie>\r\n              <Tooltip />\r\n            </PieChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Engagement Chart */}\r\n      <div className=\"bg-white rounded-lg shadow-lg p-6\">\r\n        <h3 className=\"text-lg font-semibold text-gray-900 mb-6\">Student Engagement vs Performance</h3>\r\n        <ResponsiveContainer width=\"100%\" height={300}>\r\n          <LineChart data={engagementData}>\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"name\" />\r\n            <YAxis yAxisId=\"left\" />\r\n            <YAxis yAxisId=\"right\" orientation=\"right\" />\r\n            <Tooltip />\r\n            <Legend />\r\n            <Bar yAxisId=\"left\" dataKey=\"watchTime\" fill=\"#8884d8\" />\r\n            <Line yAxisId=\"right\" type=\"monotone\" dataKey=\"score\" stroke=\"#ff7300\" />\r\n          </LineChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// --- Student Analytics Component ---\r\nconst StudentAnalytics = ({ data }) => {\r\n  const progressData =\r\n    data?.current_courses?.map(course => ({\r\n      name: course.title.substring(0, 20) + '...',\r\n      progress: course.progress\r\n    })) || [];\r\n\r\n  return (\r\n    <div className=\"space-y-8\">\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\r\n        <StatCard title=\"Enrolled Courses\" value={data?.total_enrollments || 0} icon={BookOpen} color=\"blue\" />\r\n        <StatCard title=\"Completed\" value={data?.completed_courses || 0} icon={Trophy} color=\"green\" />\r\n        <StatCard title=\"Watch Time\" value={`${Math.round(data?.total_watch_time || 0)}h`} icon={Clock} color=\"purple\" />\r\n        <StatCard title=\"Avg Score\" value={`${Math.round(data?.avg_quiz_score || 0)}%`} icon={TrendingUp} color=\"yellow\" />\r\n      </div>\r\n\r\n      <div className=\"bg-white rounded-lg shadow-lg p-6\">\r\n        <h3 className=\"text-lg font-semibold text-gray-900 mb-6\">Course Progress</h3>\r\n        <ResponsiveContainer width=\"100%\" height={300}>\r\n          <BarChart data={progressData}>\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"name\" />\r\n            <YAxis />\r\n            <Tooltip />\r\n            <Bar dataKey=\"progress\" fill=\"#3b82f6\" />\r\n          </BarChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// --- Stat Card ---\r\nconst StatCard = ({ title, value, icon: Icon, color }) => {\r\n  const colorClasses = {\r\n    blue: 'bg-blue-50 text-blue-600',\r\n    green: 'bg-green-50 text-green-600',\r\n    purple: 'bg-purple-50 text-purple-600',\r\n    yellow: 'bg-yellow-50 text-yellow-600',\r\n    red: 'bg-red-50 text-red-600'\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-white rounded-lg shadow p-6 flex items-center justify-between\">\r\n      <div>\r\n        <p className=\"text-sm text-gray-500\">{title}</p>\r\n        <p className=\"text-2xl font-bold text-gray-900\">{value}</p>\r\n      </div>\r\n      <div className={`p-3 rounded-full ${colorClasses[color]}`}>\r\n        <Icon className=\"h-6 w-6\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Analytics;\r\n"],"names":["COLORS","AdminAnalytics","_ref2","_data$student_perform","_data$student_perform2","_data$student_perform3","_data$student_perform4","_data$dropout_alerts","data","courseAnalytics","coursePerformanceData","map","course","name","course_title","substring","enrollments","total_enrollments","completion","completion_rate","avgScore","avg_quiz_score","dropoutRiskData","value","student_performance","filter","s","length","engagementData","student","student_name","split","watchTime","total_watch_time","score","_jsxs","className","children","_jsx","StatCard","title","total_students","icon","Users","color","total_courses","BookOpen","TrendingUp","dropout_alerts","AlertTriangle","ResponsiveContainer","width","height","BarChart","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Legend","Bar","fill","PieChart","Pie","cx","cy","labelLine","label","_ref3","outerRadius","entry","index","Cell","LineChart","yAxisId","orientation","Line","type","stroke","StudentAnalytics","_ref4","_data$current_courses","progressData","current_courses","progress","completed_courses","Trophy","Math","round","Clock","_ref5","Icon","blue","green","purple","yellow","red","_ref","user","onLogout","dashboardData","setDashboardData","useState","setCourseAnalytics","loading","setLoading","refreshing","setRefreshing","navigate","useNavigate","useEffect","fetchAnalyticsData","async","role","adminData","courses","Promise","all","analyticsAPI","getAdminDashboard","courseAPI","getCourses","courseAnalyticsPromises","slice","getCourseAnalytics","id","catch","analyticsResults","Boolean","studentData","getStudentDashboard","error","handleApiError","handleRefresh","toast","success","onClick","disabled","RefreshCw","full_name","LogOut","onRefresh"],"sourceRoot":""}