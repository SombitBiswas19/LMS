{"version":3,"file":"static/js/917.9e9828f4.chunk.js","mappings":"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","sources":["components/VideoPlayer.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport ReactPlayer from 'react-player';\r\nimport { courseAPI, analyticsAPI, handleApiError } from '../services/api';\r\nimport toast from 'react-hot-toast';\r\nimport { \r\n  Play, \r\n  Pause, \r\n  Volume2, \r\n  VolumeX, \r\n  Maximize, \r\n  ArrowLeft,\r\n  ArrowRight,\r\n  BookOpen,\r\n  Clock,\r\n  CheckCircle,\r\n  List\r\n} from 'lucide-react';\r\n\r\nconst VideoPlayer = ({ user, onLogout }) => {\r\n  const { courseId, lessonId } = useParams();\r\n  const navigate = useNavigate();\r\n  \r\n  const [course, setCourse] = useState(null);\r\n  const [lessons, setLessons] = useState([]);\r\n  const [currentLesson, setCurrentLesson] = useState(null);\r\n  const [playing, setPlaying] = useState(false);\r\n  const [volume, setVolume] = useState(0.8);\r\n  const [muted, setMuted] = useState(false);\r\n  const [played, setPlayed] = useState(0);\r\n  const [duration, setDuration] = useState(0);\r\n  const [showPlaylist, setShowPlaylist] = useState(true);\r\n  const [watchTime, setWatchTime] = useState(0);\r\n  const [loading, setLoading] = useState(true);\r\n  \r\n  const playerRef = useRef(null);\r\n  const watchTimeRef = useRef(0);\r\n\r\n  useEffect(() => {\r\n    fetchCourseData();\r\n  }, [courseId]);\r\n\r\n  useEffect(() => {\r\n    if (lessons.length > 0 && lessonId) {\r\n      const lesson = lessons.find(l => l.id === parseInt(lessonId));\r\n      setCurrentLesson(lesson);\r\n    }\r\n  }, [lessons, lessonId]);\r\n\r\n  // Track watch time\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      if (playing && currentLesson) {\r\n        watchTimeRef.current += 1;\r\n        setWatchTime(prev => prev + 1);\r\n      }\r\n    }, 1000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [playing, currentLesson]);\r\n\r\n  // Update progress when component unmounts or lesson changes\r\n  useEffect(() => {\r\n    return () => {\r\n      if (currentLesson && watchTimeRef.current > 0) {\r\n        updateProgress();\r\n      }\r\n    };\r\n  }, [currentLesson]);\r\n\r\n  const fetchCourseData = async () => {\r\n    try {\r\n      const [courseData, lessonsData] = await Promise.all([\r\n        courseAPI.getCourse(courseId),\r\n        courseAPI.getLessons(courseId)\r\n      ]);\r\n      \r\n      setCourse(courseData);\r\n      setLessons(lessonsData);\r\n    } catch (error) {\r\n      handleApiError(error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const updateProgress = async () => {\r\n    if (!currentLesson || watchTimeRef.current === 0) return;\r\n\r\n    try {\r\n      await analyticsAPI.updateProgress(\r\n        parseInt(courseId),\r\n        currentLesson.id,\r\n        watchTimeRef.current / 60, // Convert to minutes\r\n        played > 0.9 // Mark as completed if watched 90%\r\n      );\r\n      \r\n      // Reset watch time counter\r\n      watchTimeRef.current = 0;\r\n    } catch (error) {\r\n      console.error('Failed to update progress:', error);\r\n    }\r\n  };\r\n\r\n  const handleProgress = (state) => {\r\n    setPlayed(state.played);\r\n  };\r\n\r\n  const handleDuration = (duration) => {\r\n    setDuration(duration);\r\n  };\r\n\r\n  const handleSeek = (value) => {\r\n    playerRef.current?.seekTo(value);\r\n    setPlayed(value);\r\n  };\r\n\r\n  const getCurrentLessonIndex = () => {\r\n    return lessons.findIndex(lesson => lesson.id === currentLesson?.id);\r\n  };\r\n\r\n  const goToNextLesson = () => {\r\n    const currentIndex = getCurrentLessonIndex();\r\n    if (currentIndex < lessons.length - 1) {\r\n      const nextLesson = lessons[currentIndex + 1];\r\n      navigate(`/course/${courseId}/lesson/${nextLesson.id}`);\r\n    }\r\n  };\r\n\r\n  const goToPreviousLesson = () => {\r\n    const currentIndex = getCurrentLessonIndex();\r\n    if (currentIndex > 0) {\r\n      const prevLesson = lessons[currentIndex - 1];\r\n      navigate(`/course/${courseId}/lesson/${prevLesson.id}`);\r\n    }\r\n  };\r\n\r\n  const formatTime = (seconds) => {\r\n    const mins = Math.floor(seconds / 60);\r\n    const secs = Math.floor(seconds % 60);\r\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center\">\r\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!currentLesson) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center\">\r\n        <div className=\"text-center\">\r\n          <h2 className=\"text-xl font-semibold text-gray-900 mb-2\">Lesson not found</h2>\r\n          <button\r\n            onClick={() => navigate(`/courses`)}\r\n            className=\"text-blue-600 hover:text-blue-700\"\r\n          >\r\n            Back to Courses\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-black\">\r\n      <div className=\"flex h-screen\">\r\n        {/* Video Player Section */}\r\n        <div className={`flex-1 flex flex-col ${showPlaylist ? 'w-3/4' : 'w-full'}`}>\r\n          {/* Header */}\r\n          <div className=\"bg-gray-900 text-white p-4 flex items-center justify-between\">\r\n            <div className=\"flex items-center space-x-4\">\r\n              <button\r\n                onClick={() => navigate('/courses')}\r\n                className=\"p-2 hover:bg-gray-800 rounded-lg transition-colors\"\r\n              >\r\n                <ArrowLeft className=\"h-5 w-5\" />\r\n              </button>\r\n              <div>\r\n                <h1 className=\"text-lg font-semibold\">{currentLesson.title}</h1>\r\n                <p className=\"text-sm text-gray-300\">{course.title}</p>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"flex items-center space-x-4\">\r\n              <button\r\n                onClick={() => setShowPlaylist(!showPlaylist)}\r\n                className=\"p-2 hover:bg-gray-800 rounded-lg transition-colors\"\r\n              >\r\n                <List className=\"h-5 w-5\" />\r\n              </button>\r\n              <span className=\"text-sm text-gray-300\">\r\n                {formatTime(watchTime)} watched\r\n              </span>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Video Player */}\r\n          <div className=\"flex-1 relative bg-black\">\r\n            {currentLesson.video_url ? (\r\n              <ReactPlayer\r\n                ref={playerRef}\r\n                url={`http://localhost:8000${currentLesson.video_url}`}\r\n                width=\"100%\"\r\n                height=\"100%\"\r\n                playing={playing}\r\n                volume={volume}\r\n                muted={muted}\r\n                onProgress={handleProgress}\r\n                onDuration={handleDuration}\r\n                onEnded={() => {\r\n                  setPlaying(false);\r\n                  updateProgress();\r\n                  // Auto-play next lesson\r\n                  if (getCurrentLessonIndex() < lessons.length - 1) {\r\n                    setTimeout(goToNextLesson, 2000);\r\n                  }\r\n                }}\r\n              />\r\n            ) : (\r\n              <div className=\"w-full h-full flex items-center justify-center text-white\">\r\n                <div className=\"text-center\">\r\n                  <Play className=\"h-16 w-16 mx-auto mb-4 opacity-50\" />\r\n                  <p className=\"text-lg\">No video available for this lesson</p>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {/* Video Controls Overlay */}\r\n            <div className=\"absolute bottom-0 left-0 right-0 bg-gradient-to-t from-black to-transparent p-4\">\r\n              <div className=\"space-y-4\">\r\n                {/* Progress Bar */}\r\n                <div className=\"flex items-center space-x-2 text-white text-sm\">\r\n                  <span>{formatTime(played * duration)}</span>\r\n                  <div className=\"flex-1\">\r\n                    <input\r\n                      type=\"range\"\r\n                      min={0}\r\n                      max={1}\r\n                      step={0.01}\r\n                      value={played}\r\n                      onChange={(e) => handleSeek(parseFloat(e.target.value))}\r\n                      className=\"w-full h-1 bg-gray-600 rounded-lg appearance-none cursor-pointer\"\r\n                      style={{\r\n                        background: `linear-gradient(to right, #3b82f6 0%, #3b82f6 ${played * 100}%, #4b5563 ${played * 100}%, #4b5563 100%)`\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  <span>{formatTime(duration)}</span>\r\n                </div>\r\n\r\n                {/* Control Buttons */}\r\n                <div className=\"flex items-center justify-between\">\r\n                  <div className=\"flex items-center space-x-4\">\r\n                    {/* Play/Pause */}\r\n                    <button\r\n                      onClick={() => setPlaying(!playing)}\r\n                      className=\"p-2 hover:bg-white hover:bg-opacity-20 rounded-lg transition-colors\"\r\n                    >\r\n                      {playing ? (\r\n                        <Pause className=\"h-6 w-6 text-white\" />\r\n                      ) : (\r\n                        <Play className=\"h-6 w-6 text-white\" />\r\n                      )}\r\n                    </button>\r\n\r\n                    {/* Volume */}\r\n                    <div className=\"flex items-center space-x-2\">\r\n                      <button\r\n                        onClick={() => setMuted(!muted)}\r\n                        className=\"p-2 hover:bg-white hover:bg-opacity-20 rounded-lg transition-colors\"\r\n                      >\r\n                        {muted ? (\r\n                          <VolumeX className=\"h-5 w-5 text-white\" />\r\n                        ) : (\r\n                          <Volume2 className=\"h-5 w-5 text-white\" />\r\n                        )}\r\n                      </button>\r\n                      <input\r\n                        type=\"range\"\r\n                        min={0}\r\n                        max={1}\r\n                        step={0.1}\r\n                        value={volume}\r\n                        onChange={(e) => setVolume(parseFloat(e.target.value))}\r\n                        className=\"w-20 h-1 bg-gray-600 rounded-lg appearance-none cursor-pointer\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"flex items-center space-x-2\">\r\n                    {/* Previous/Next Lesson */}\r\n                    <button\r\n                      onClick={goToPreviousLesson}\r\n                      disabled={getCurrentLessonIndex() === 0}\r\n                      className=\"p-2 hover:bg-white hover:bg-opacity-20 rounded-lg transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                    >\r\n                      <ArrowLeft className=\"h-5 w-5 text-white\" />\r\n                    </button>\r\n                    \r\n                    <button\r\n                      onClick={goToNextLesson}\r\n                      disabled={getCurrentLessonIndex() === lessons.length - 1}\r\n                      className=\"p-2 hover:bg-white hover:bg-opacity-20 rounded-lg transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                    >\r\n                      <ArrowRight className=\"h-5 w-5 text-white\" />\r\n                    </button>\r\n\r\n                    {/* Fullscreen */}\r\n                    <button\r\n                      onClick={() => {\r\n                        if (document.fullscreenElement) {\r\n                          document.exitFullscreen();\r\n                        } else {\r\n                          document.documentElement.requestFullscreen();\r\n                        }\r\n                      }}\r\n                      className=\"p-2 hover:bg-white hover:bg-opacity-20 rounded-lg transition-colors\"\r\n                    >\r\n                      <Maximize className=\"h-5 w-5 text-white\" />\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Playlist Sidebar */}\r\n        {showPlaylist && (\r\n          <div className=\"w-1/4 bg-white border-l border-gray-200 flex flex-col\">\r\n            <div className=\"p-4 border-b border-gray-200\">\r\n              <h3 className=\"font-semibold text-gray-900\">Course Content</h3>\r\n              <p className=\"text-sm text-gray-600\">{lessons.length} lessons</p>\r\n            </div>\r\n            \r\n            <div className=\"flex-1 overflow-y-auto\">\r\n              {lessons.map((lesson, index) => (\r\n                <button\r\n                  key={lesson.id}\r\n                  onClick={() => {\r\n                    updateProgress(); // Save current progress\r\n                    navigate(`/course/${courseId}/lesson/${lesson.id}`);\r\n                  }}\r\n                  className={`w-full p-4 text-left border-b border-gray-100 hover:bg-gray-50 transition-colors ${\r\n                    currentLesson.id === lesson.id ? 'bg-blue-50 border-l-4 border-l-blue-600' : ''\r\n                  }`}\r\n                >\r\n                  <div className=\"flex items-start space-x-3\">\r\n                    <div className=\"flex-shrink-0 mt-1\">\r\n                      {currentLesson.id === lesson.id ? (\r\n                        playing ? (\r\n                          <Pause className=\"h-4 w-4 text-blue-600\" />\r\n                        ) : (\r\n                          <Play className=\"h-4 w-4 text-blue-600\" />\r\n                        )\r\n                      ) : (\r\n                        <div className=\"w-6 h-6 rounded-full bg-gray-200 flex items-center justify-center text-xs text-gray-600\">\r\n                          {index + 1}\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                    \r\n                    <div className=\"flex-1 min-w-0\">\r\n                      <h4 className=\"text-sm font-medium text-gray-900 truncate\">\r\n                        {lesson.title}\r\n                      </h4>\r\n                      <div className=\"flex items-center space-x-2 mt-1\">\r\n                        <Clock className=\"h-3 w-3 text-gray-400\" />\r\n                        <span className=\"text-xs text-gray-500\">\r\n                          {Math.round(lesson.duration_minutes)} min\r\n                        </span>\r\n                        {played > 0.9 && currentLesson.id === lesson.id && (\r\n                          <CheckCircle className=\"h-3 w-3 text-green-500\" />\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </button>\r\n              ))}\r\n            </div>\r\n\r\n            {/* Course Info */}\r\n            <div className=\"p-4 border-t border-gray-200 bg-gray-50\">\r\n              <div className=\"flex items-center justify-between mb-2\">\r\n                <span className=\"text-sm text-gray-600\">Progress</span>\r\n                <span className=\"text-sm font-medium text-gray-900\">\r\n                  {Math.round((getCurrentLessonIndex() + (played > 0.9 ? 1 : 0)) / lessons.length * 100)}%\r\n                </span>\r\n              </div>\r\n              <div className=\"w-full bg-gray-200 rounded-full h-2\">\r\n                <div\r\n                  className=\"bg-blue-600 h-2 rounded-full transition-all duration-300\"\r\n                  style={{\r\n                    width: `${(getCurrentLessonIndex() + (played > 0.9 ? 1 : 0)) / lessons.length * 100}%`\r\n                  }}\r\n                ></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideoPlayer;"],"names":["_ref","user","onLogout","courseId","lessonId","useParams","navigate","useNavigate","course","setCourse","useState","lessons","setLessons","currentLesson","setCurrentLesson","playing","setPlaying","volume","setVolume","muted","setMuted","played","setPlayed","duration","setDuration","showPlaylist","setShowPlaylist","watchTime","setWatchTime","loading","setLoading","playerRef","useRef","watchTimeRef","useEffect","fetchCourseData","length","lesson","find","l","id","parseInt","interval","setInterval","current","prev","clearInterval","updateProgress","async","courseData","lessonsData","Promise","all","courseAPI","getCourse","getLessons","error","handleApiError","analyticsAPI","console","getCurrentLessonIndex","findIndex","goToNextLesson","currentIndex","nextLesson","formatTime","seconds","Math","floor","toString","padStart","_jsx","className","children","_jsxs","onClick","ArrowLeft","title","List","video_url","ReactPlayer","ref","url","width","height","onProgress","state","onDuration","onEnded","setTimeout","Play","type","min","max","step","value","onChange","e","_playerRef$current","seekTo","handleSeek","parseFloat","target","style","background","Pause","VolumeX","Volume2","goToPreviousLesson","prevLesson","disabled","ArrowRight","document","fullscreenElement","exitFullscreen","documentElement","requestFullscreen","Maximize","map","index","Clock","round","duration_minutes","CheckCircle"],"sourceRoot":""}